<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oti.thirtyone.dao.AttendanceDao">
	
	<select id="selectCheckInToday" parameterType="String"  resultType="int">
		select count(check_in)
		from attendances
		where TO_CHAR(atd_date, 'YY/MM/DD') = TO_CHAR(sysdate, 'YY/MM/DD') and emp_id = #{empId}
	</select>
	
	<insert id="insertCheckIn">
		insert into attendances
			(atd_date, emp_id, check_in, atd_state, atd_standard_time)
		values
			(sysdate, #{empId}, sysdate, #{state}, 8)			
	</insert>
	
	<update id="updateCheckOut">
		update attendances set check_out = sysdate, atd_state=#{state}
		where TO_CHAR(atd_date, 'YY/MM/DD') = TO_CHAR(sysdate, 'YY/MM/DD') and emp_id = #{empId}
	</update>
	
	<select id="selectAtdByEmpId" parameterType="String" resultType="Attendance">
		select atd_date, emp_id, check_in, check_out, atd_state, atd_standard_time, atd_over_time, atd_approved_time
		from attendances
		where TO_CHAR(atd_date, 'YY/MM/DD') = TO_CHAR(sysdate, 'YY/MM/DD') and emp_id = #{empId}
	</select>
	
	<select id="selectAtdForMonths" resultType="Attendance">
		select atd_date, emp_id, check_in, check_out, atd_state, atd_standard_time, atd_over_time, atd_approved_time
		from attendances
		WHERE atd_date BETWEEN
	        ADD_MONTHS(TO_DATE(#{month}, 'yyyy/MM/DD'), -1) AND
	        ADD_MONTHS(TO_DATE(#{month}, 'yyyy/MM/DD'), 1)
	    AND emp_id = #{empId}and emp_id=#{empId}
	</select>
	
	<select id="selectAtdMonthly" resultType="Attendance">
		select atd_date, emp_id, check_in, check_out, atd_state, atd_standard_time, atd_over_time, atd_approved_time
		from attendances
		where to_char(atd_date, 'yyyy/MM') = #{month} and emp_id=#{empId}
	</select>
	
	<select id="selectAtdWeekly" resultType="Attendance">
		select atd_date, emp_id, check_in, check_out, atd_state, atd_standard_time, atd_over_time, atd_approved_time
		from attendances
		where atd_date between TO_DATE(#{monday}, 'yyyy/MM/DD') and TO_DATE(#{sunday}, 'yyyy/MM/DD') and emp_id=#{empId}
	</select>
	
	<select id="selectAtdOneDay" resultType="Attendance">
		select atd_date, emp_id, check_in, check_out, atd_state, atd_standard_time, atd_over_time, atd_approved_time
		from attendances
		where to_char(atd_date, 'yyyy-mm-dd') = #{day} and emp_id=#{empId}
	</select>
	
	<select id="selectAtdOneDayByDate" resultType="Attendance">
		select atd_date, emp_id, check_in, check_out, atd_state, atd_standard_time, atd_over_time, atd_approved_time
		from attendances
		where to_char(atd_date, 'yyyy-mm-dd') = to_char(#{day}, 'yyyy-mm-dd') and emp_id=#{empId}
	</select>
	
	<update id="updateStatus">
		update attendances 
		set atd_state = '정상출근' 
		where emp_id = #{empId} and 
			atd_date = (
					select atd_date 
					from reason
					where to_char(atd_date, 'yyyy-mm-dd') = #{atdDate}
						and emp_id = #{empId}
					)
	</update>
<!-- 	<select id="selectDeptAtdAll" parameterType="int" resultType="Attendance">
		select atd_date, emp_id, check_in, check_out, atd_state, atd_standard_time, atd_over_time, atd_approved_time
		from attendance a join employees e
		on a.emp_id = e.emp_id
		where e.dept_id = #{deptId} and to_char(atd_date, 'yyyy-mm-dd') = to_char(#{day}, 'yyyy-mm-dd')
	</select> -->
	
	
	<select id="selectAtdForApproval" parameterType="Approval" resultType="Attendance">
		<![CDATA[
			SELECT
				atd_date,
				emp_id,
				atd_state
			FROM ATTENDANCES
			WHERE 
				atd_date = #{atdDate}
			AND emp_id = #{empId}
		]]>
	</select>
	
	<update id="updateAtdStateByApproval" parameterType="Attendance">
		<![CDATA[
			UPDATE ATTENDANCES
			SET atd_state = #{atdState}
			WHERE 
				atd_date = #{atdDate}
			AND emp_id = #{empId}
		]]>
	</update>
	
	<update id="updateAtdOvertime" parameterType="Approval">
		<![CDATA[
			UPDATE ATTENDANCES
			SET atd_over_time = #{atdOverTime}
			WHERE 
				atd_date = #{atdDate}
			AND emp_id = #{empId}
		]]>
	</update>
</mapper>